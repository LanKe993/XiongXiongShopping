package com.taotao.portal.service.impl;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.http.protocol.HTTP;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.HttpClientUtil;
import com.taotao.common.utils.JsonUtils;
import com.taotao.pojo.TbItem;
import com.taotao.pojo.TbItemCat;
import com.taotao.portal.pojo.CartItem;
import com.taotao.portal.service.CartService;

/** 
* @description:
* @author: hlv
* @date：2020年4月11日 下午5:07:34 
* 类说明 
*/

@Service
public class CartServiceImpl implements CartService {

	@Value("${REST_BASE_URL}")
	private String REST_BASE_URL;
	
	@Value("${ITEM_BASE_INFO_URL}")
	private String ITEM_BASE_INFO_URL;
	
	/**
	 * <p>Title: addCartItem</p>
	 * <p>Description: 添加购物车商品</p>
	 * @param itemId
	 * @param number
	 * @return
	 * @see com.taotao.portal.service.CartService#addCartItem(long, int)
	 */
	@Override
	public TaotaoResult addCartItem(long itemId, int number, HttpServletRequest request, HttpServletResponse response) {
		CartItem cartItem = null;
		// 取购物车商品列表
		List<CartItem> list = getCartItemList(request);
		// 判断购物车是否存在此商品信息
		for (CartItem cartItem : list) {
			
		}
		
		// 根据商品id查询商品信息
		String itemDataJson = HttpClientUtil.doGet(REST_BASE_URL + ITEM_BASE_INFO_URL + itemId); 
		TaotaoResult taotaoResult = TaotaoResult.formatToPojo(itemDataJson, TbItem.class);
		if (taotaoResult.getStatus() == 200) {
			TbItem item = (TbItem) taotaoResult.getData();
			cartItem.setId(itemId);
			cartItem.setImage(item.getImage() == null ? "" : item.getImage().split(",")[0]);
			cartItem.setNumber(number);
			cartItem.setPrice(item.getPrice());
			cartItem.setTitle(item.getTitle());
		}
		return null;
	}
	
	/**
	 *从cookice中取商品列表 
	 */
	private List<CartItem> getCartItemList(HttpServletRequest request) {
		// 从cookice找那个取商品列表
		String cartItemJson = CookieUtils.getCookieValue(request, "TT_CART", true);
		// json数据转换为商品列表
		List<CartItem> list = JsonUtils.jsonToList(cartItemJson, CartItem.class);
		
		return list;
	}

}
